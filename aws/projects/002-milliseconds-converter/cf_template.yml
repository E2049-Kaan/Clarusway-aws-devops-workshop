AWSTemplateFormatVersion: 2010-09-09
Description: |
  CloudFormation template for milliseconds converter application. This app runs on application load balancer. In addition, it is observed by AutoScalingGroup.
  
Resources:
  ALBSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Enable HTTP for ALB #required
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
  WebServerSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Enable HTTP for App from ALB #required
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp 
          FromPort: 80
          ToPort: 80         
          SourceSecurityGroupId: !GetAtt ALBSecurityGroup.GroupId
  WebServerLaunchTemplate:
    Type: "AWS::EC2::LaunchTemplate"
    Properties:
      LaunchTemplateData:
        InstanceType: t2.micro
        DisableApiTermination: 'true'
        KeyName: waltharris
        ImageId: ami-0947d2ba12ee1ff75
        SecurityGroupIds:
        - !GetAtt WebServerSecurityGroupp.GroupId
        TagSpecifications:
            - ResourceType: instance
              Tag:
                - Key: Name  
                  Value: !Sub Web Server of ${AWS::StackName}
        UserData: 
          Fn::!Base64:
            !Sub |
              #!/bin/bash
              yum update -y
              yum install python3 -y
              pip3 install flask
              TOKEN="1a1cb6545b52da2015e85fb088c4eed23d5df59e"
              FOLDER="https://$TOKEN@raw.githubusercontent.com/E2049-Kaan/Clarusway-aws-devops-workshop/master/aws/projects/002-milliseconds-converter/"
              curl -s --create-dirs -o "/home/ec2-user/templates/index.html" -L "$FOLDER"templates/index.html
              curl -s --create-dirs -o "/home/ec2-user/templates/result.html" -L "$FOLDER"templates/result.html
              curl -s --create-dirs -o "/home/ec2-user/app1.py" -L "$FOLDER"app1.py
              python3 /home/ec2-user/app1.py
  WebServerTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      Port: 80
      Protocol: HTTP
      TargetType: instance
      VpcId: !GetAtt WebServerSecurityGroup.VpcId
  ApplicationLoadBalancer:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      IpAddressType: ipv4
      Scheme: internet-facing
      SecurityGroups:
        - !GetAtt ALBSecurityGroup.GroupId
      Subnets:
        - subnet-000fa321
        - subnet-0716664a
        - subnet-1c91652d
        - subnet-abfd50f4
        - subnet-b34bead5
        - subnet-ccdb41c2
      Type: application 
  ALBListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions: #required
        - TargetGroupArn: !Ref WebServerTargetGroup
        - Type: forward
      LoadBalancerArn: !Ref ApplicationLoadBalancer #required
      Port: 80 #required
      Protocol: HTTP #required
  WebServerASG:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      AvailabilityZones:
        - !GetAZs ""
      DesiredCapacity: 2
      HealthCheckGracePeriod: 90
      HealthCheckType: ELB
      LaunchTemplate: 
        LaunchTemplateId: !Ref WebServerLaunchTemplate
        Version: !GetAtt WebServerLaunchTemplate.LatestVersionNumber
      MaxSize: String #required
      MinSize: String #required
      TargetGroupARNs:
        - !Ref WebServerTargetGroup
    
  
  
Outputs:
  WebsiteURL:
    Description: Milliseconds Converter Application Load Balancer
    Value: !Sub 
      - http://${ALBaddress}
      - ALBaddress: !GetAtt ApplicationLoadBalancer.DNSName